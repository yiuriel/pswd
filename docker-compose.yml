version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: pswd-db
    environment:
      POSTGRES_DB: pswd
      POSTGRES_USER: pswd
      POSTGRES_PASSWORD: pswd
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pswd"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pswd-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: pswd-backend
    environment:
      # Database connection - updated for Docker network
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: pswd
      DB_PASSWORD: pswd
      DB_NAME: pswd
      # JWT secret (change in production!)
      JWT_SECRET: change-this-secret-in-production
      # Server settings
      PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pswd-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: pswd-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - pswd-network
    restart: unless-stopped

  # pgAdmin - Database Management UI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pswd-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin-servers.json:/pgadmin4/servers.json
    depends_on:
      - db
    networks:
      - pswd-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  pswd-network:
    driver: bridge
